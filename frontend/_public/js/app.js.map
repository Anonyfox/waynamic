{"version":3,"file":"_public/js/app.js","sources":["app/app.coffee","app/scripts/controllers.coffee","app/scripts/directives.coffee","app/scripts/filters.coffee","app/scripts/services.coffee"],"names":[],"mappings":"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","sourcesContent":["'use strict'\n\n# Declare app level module which depends on filters, and services\nApp = angular.module('app', [\n  'ngCookies'\n  'ngResource'\n  'ngRoute'\n  'app.controllers'\n  'app.directives'\n  'app.filters'\n  'app.services'\n  'partials'\n])\n\nApp.config([\n  '$routeProvider'\n  '$locationProvider'\n\n($routeProvider, $locationProvider, config) ->\n\n  $routeProvider\n\n    .when('/', {templateUrl: '/partials/landingpage.html'})\n    .when('/pictures', {templateUrl: '/partials/pictures.html'})\n    .when('/profile', {templateUrl: '/partials/profile.html'})\n    # .when('/import', {templateUrl: '/partials/import.html'})\n    # .when('/register', {templateUrl: '/partials/register.html'})\n    # .when('/login', {templateUrl: '/partials/login.html'})\n    # .when('/logout', {templateUrl: '/partials/logout.html'})\n\n    # Catch all\n    .otherwise({redirectTo: '/'})\n\n  # Without server side support html5 must be disabled.\n  $locationProvider.html5Mode(false)\n])\n","'use strict'\n\n### Controllers ###\n\nangular.module('app.controllers', [])\n\n.controller('AppCtrl', [\n  '$scope'\n  '$location'\n  '$resource'\n  '$rootScope'\n\n($scope, $location, $resource, $rootScope) ->\n  $scope.$location = $location\n  $scope.$watch('$location.path()', (path) -> $scope.activeNavId = path || '/')\n  $scope.getClass = (id) -> if $scope.activeNavId.substring(0, id.length) == id then 'active' else ''\n])\n\n.controller('NavCtrl', ['$scope', 'User', ($scope, User) ->\n  $scope.changeSelectedUser = (u) ->\n    User.setCurrentUser u\n  User.getAllUsers()\n])\n\n.controller('ProfileCtrl', ['$scope', 'User', ($scope, User) ->\n  User.getUserProfile()\n\n  # Re-render start screen on user change\n  $scope.$watch \"users.current._id\", (oldValue, newValue) ->\n    if oldValue isnt newValue\n      User.getUserProfile()\n\n  $scope.switchUserTo = (id) ->\n    User.setCurrentUserById id\n])\n\n.controller('PicturesCtrl', ['$scope', '$rootScope', 'Pictures', 'User', ($scope, $rootScope, Pictures, User) ->\n  # Start Screen\n  Pictures.getInitialPics() unless $rootScope.Current.list.length\n\n  # Re-render start screen on user change\n  $scope.$watch \"users.current._id\", (oldValue, newValue) ->\n    if oldValue isnt newValue\n      Pictures.getInitialPics()\n\n  # render new screen with updated feedback on user click event\n  $scope.feedback = (_id) ->\n    $(\"#pictures-view\").hide()\n    postBody = _.extend $rootScope.Current, clicked:_id\n    Pictures.getPicsByFeedback postBody, (error, result) ->\n      $(\"#pictures-view\").fadeIn()\n])","'use strict'\n\n### Directives ###\n\n# register the module with Angular\nangular.module('app.directives', [\n  # require the 'app.service' module\n  'app.services'\n])\n\n.directive('appVersion', [\n  'version'\n\n(version) ->\n\n  (scope, elm, attrs) ->\n    elm.text(version)\n])\n","'use strict'\n\n### Filters ###\n\nangular.module('app.filters', [])\n\n.filter('interpolate', [\n  'version',\n\n(version) ->\n  (text) ->\n    String(text).replace(/\\%VERSION\\%/mg, version)\n])\n","'use strict'\n\n### Sevices ###\n\nangular.module('app.services', [])\n\n.service(\"User\", [\"$http\", \"$rootScope\", ($http, $rootScope) ->\n  $rootScope.users = {\n    list: []\n    current: {_id: -1, name: \"\"}\n  }\n  return {\n    currentUserId: -> $rootScope.users.current._id\n    setCurrentUser: (u) -> $rootScope.users.current = _.find $rootScope.users.list, (us) -> us._id is u._id\n    setCurrentUserById: (id) -> $rootScope.users.current = _.find $rootScope.users.list, (u) -> u._id is id\n    getAllUsers: (fn) ->\n      $http.get(\"/users\").then(\n        (data) ->\n          $rootScope.users.list = _.map data.data, (u) -> {_id: u._id, name: \"##{u._id} #{u.firstName} #{u.lastName}\"}\n          fn? null, $rootScope.users.list\n        (data) -> fn? null, []\n      )\n    getUserProfile: (fn) ->\n      $http.get(\"/users/#{$rootScope.users.current._id}/profile\").then(\n        (data) ->\n          $rootScope.users.currentFriends = data.data.friends\n          $rootScope.users.currentHistory = data.data.history\n          fn? null, $rootScope.current\n        (data) -> fn? null, {}\n      )\n  }\n])\n\n.service(\"Pictures\", [\"$http\", \"$rootScope\", \"User\", ($http, $rootScope, User) ->\n  $rootScope.Current = {\n    list: []\n    current: {_id: 0, url: \"\"}\n  }\n  getPicsByFeedback: (postBody, fn) ->\n    $http.post(\"/users/#{User.currentUserId()}/pictures\", postBody).then(\n      (data) ->\n        $rootScope.Current = data.data\n        fn? null, data.data\n      (data) -> fn? {error: \"Something went wrong. Flickr unavailable?\"}, null\n    )\n  getInitialPics: (fn) ->\n    $http.get(\"/users/#{User.currentUserId()}/pictures\").then(\n      (data) ->\n        $rootScope.Current = data.data\n        fn? null, data.data\n      (data) -> fn? {error: \"Something went wrong. Flickr unavailable?\"}, null\n    )\n])\n"]}